<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About app</value>
  </data>
  <data name="AboutDetails" xml:space="preserve">
    <value>Application for scanning QR codes in Windows environment. It contains functionality of decoding COVID-19 health certificates (vaccine, recovery, test). Application WON'T STORE AND SEND ANYWHERE COLLECTED DATA. If you want scan certificate, put QR code in front of selected camera and wait for reading. Results are displayed in History tab. During reading of health certificate verification of issuer is being checked (green - HC issued by trusted issuer, yellow - unknown issuer, red - error while checking integrity of HC)</value>
  </data>
  <data name="AboutDetails2" xml:space="preserve">
    <value>During development github repositories shared by Digital Health Certificate EU were used, especially packet hcert-dotnet under Apache-2.0 license. Health certificates are digitally verified against repository of public keys available at one of selected github project to ensure they were issued by trusted authority</value>
  </data>
  <data name="AppSubtitle" xml:space="preserve">
    <value>Scanning QR codes and decoding health certificates</value>
  </data>
  <data name="AppTitle" xml:space="preserve">
    <value>QRBarcode</value>
  </data>
  <data name="BackButtonContent" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="CzyscButtonContent" xml:space="preserve">
    <value>Clean</value>
  </data>
  <data name="DecodeHCOption" xml:space="preserve">
    <value>Decoding health certificate</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error: </value>
  </data>
  <data name="ErrorEmptyCertificates" xml:space="preserve">
    <value>Empty public keys dictionary for verifying health certificates</value>
  </data>
  <data name="ErrorNull" xml:space="preserve">
    <value>Camera error. Do you have any camera attached? Are you running inside VM?</value>
  </data>
  <data name="HCAuthorityDetails" xml:space="preserve">
    <value>Authority responsible for health certificate</value>
  </data>
  <data name="HCCountry" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="HCDateOfBirth" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="HCDateOfVaccine" xml:space="preserve">
    <value>Date of vaccination</value>
  </data>
  <data name="HCDisease" xml:space="preserve">
    <value>Disease</value>
  </data>
  <data name="HCDoseNumber" xml:space="preserve">
    <value>Dose</value>
  </data>
  <data name="HCFirstPositiveTestDate" xml:space="preserve">
    <value>Date of positive result</value>
  </data>
  <data name="HCGivenName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="HCGivenNameMRZ" xml:space="preserve">
    <value>First name (passport)</value>
  </data>
  <data name="HCIdentifier" xml:space="preserve">
    <value>Health certificate identifier</value>
  </data>
  <data name="HCIssuingAuthority" xml:space="preserve">
    <value>Issuer of health certificate</value>
  </data>
  <data name="HCLastName" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="HCLastNameMRZ" xml:space="preserve">
    <value>Surname (passport)</value>
  </data>
  <data name="HCMedicalProduct" xml:space="preserve">
    <value>Medical product</value>
  </data>
  <data name="HCProducer" xml:space="preserve">
    <value>Producer</value>
  </data>
  <data name="HCRecoveryValidFrom" xml:space="preserve">
    <value>Date of recovery</value>
  </data>
  <data name="HCRecoveryValidTo" xml:space="preserve">
    <value>Valid to</value>
  </data>
  <data name="HCTestCentre" xml:space="preserve">
    <value>Test centre</value>
  </data>
  <data name="HCTestDate" xml:space="preserve">
    <value>Test date</value>
  </data>
  <data name="HCTestResult" xml:space="preserve">
    <value>Test result</value>
  </data>
  <data name="HCTestType" xml:space="preserve">
    <value>Test type</value>
  </data>
  <data name="HCTotalDoses" xml:space="preserve">
    <value>Total doses required</value>
  </data>
  <data name="HCVaccine" xml:space="preserve">
    <value>Vaccine</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>App for scanning QR codes in Windows. It contains implementation of digital health certificate decoding and verifying. ANY DATA ARE STORED NOR SEND ANYWHERE.</value>
  </data>
  <data name="NoScannerFoundException" xml:space="preserve">
    <value>No scanning device. It might be regular Full HD camera</value>
  </data>
  <data name="RecoveryTitle" xml:space="preserve">
    <value>Certificate of recovery</value>
  </data>
  <data name="Scan" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="ScanDecoded" xml:space="preserve">
    <value>Decoded QR</value>
  </data>
  <data name="ScanUndecoded" xml:space="preserve">
    <value>Raw QR code</value>
  </data>
  <data name="SeparateWindowView" xml:space="preserve">
    <value>Separate window view?</value>
  </data>
  <data name="SettingsScanners" xml:space="preserve">
    <value>Scanners available</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>QRBarcode settings</value>
  </data>
  <data name="TestTitle" xml:space="preserve">
    <value>Certificate of test</value>
  </data>
  <data name="VaccineTitle" xml:space="preserve">
    <value>Certificate of vaccine</value>
  </data>
</root>